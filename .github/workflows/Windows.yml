name: Build Windows Native Image with GluonFX

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-windows-native:
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
      # Checkout your code
      - uses: actions/checkout@v4

      # Setup the Windows build environment
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Visual Studio shell
        uses: egor-tensin/vs-shell@v1

      # Make sure the latest GraalVM is installed.
      # after this step env.JAVA_HOME and env.GRAALVM_HOME will point to the GraalVM location
      - name: Setup GraalVM built by Gluon
        uses: gluonhq/setup-graalvm@master
        # set GITHUB_TOKEN to avoid exceeding GitHub's API rate limit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create a staging directory where the binary will be copied into
      - name: Make staging directory
        run: mkdir staging

      # Build your project using Maven
      # The desktop profile is used, which means a native build will be created for the host platform (in this case Windows) itself.
      - name: Gluon Build
        run: mvn -Pdesktop gluonfx:build gluonfx:package

      - name: Generate version and tag
        id: version
        run: |
          $timestamp = Get-Date -Format "yyyyMMdd-HHmmss"
          $version = "1.0.0-$timestamp"
          $tag = "1.0.0-release-$timestamp"
          
          echo "$timestamp=$timestamp" >> $env:GITHUB_OUTPUT
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "tag=$tag" >> $env:GITHUB_OUTPUT
          
          echo "Generated version: $version"
          echo "Generated tag: $tag"

